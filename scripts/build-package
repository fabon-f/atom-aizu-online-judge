#!/bin/sh

ATOM_CHANNEL="${ATOM_CHANNEL:=stable}"

echo "Downloading latest Atom release..."

if [ "$TRAVIS_OS_NAME" = "osx" ]; then
  curl -s -L "https://atom.io/download/mac?channel=$ATOM_CHANNEL" \
    -H "Accept: application/octet-stream" \
    -o "$HOME/atom.zip"
  mkdir "$HOME/atom"
  unzip -q "$HOME/atom.zip" -d "$HOME/atom"
  rm -f "$HOME/atom.zip"

  if [ "$ATOM_CHANNEL" = "stable" ]; then
    ATOM_APP_NAME="Atom.app"
  else
    ATOM_APP_NAME="Atom ${ATOM_CHANNEL}.app"
  fi
  ATOM_SCRIPT_PATH="$HOME/atom/${ATOM_APP_NAME}/Contents/Resources/app/atom.sh"
  APM_SCRIPT_PATH="$HOME/atom/${ATOM_APP_NAME}/Contents/Resources/app/apm/node_modules/.bin/apm"
  export ATOM_PATH="$HOME/atom"
else
  curl -s -L "https://atom.io/download/deb?channel=$ATOM_CHANNEL" \
    -H "Accept: application/octet-stream" \
    -o "$HOME/atom.deb"
  /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16
  export DISPLAY=":99"
  dpkg-deb -x "$HOME/atom.deb" "$HOME/atom"

  if [ "$ATOM_CHANNEL" = "stable" ]; then
    ATOM_SCRIPT_NAME="atom"
    APM_SCRIPT_NAME="apm"
  else
    ATOM_SCRIPT_NAME="atom-$ATOM_CHANNEL"
    APM_SCRIPT_NAME="apm-$ATOM_CHANNEL"
  fi
  ATOM_SCRIPT_PATH="$HOME/atom/usr/bin/$ATOM_SCRIPT_NAME"
  APM_SCRIPT_PATH="$HOME/atom/usr/bin/$APM_SCRIPT_NAME"
fi

echo "Atom version: $("$ATOM_SCRIPT_PATH" -v)"
echo "apm version: $("$APM_SCRIPT_PATH" -v)"
echo "Node.js version: $(node -v)"
echo "npm version: $(npm -v)"

echo "Installing dependencies..."

"$APM_SCRIPT_PATH" clean
"$APM_SCRIPT_PATH" install --production
npm install

exitcode=0

# Running spec
if [ -d ./spec ]; then
  echo "Running specs..."
  "$ATOM_SCRIPT_PATH" --test spec
  [ "$?" -ne 0 ] && exitcode=1
else
  echo "Missing spec directory"
  exitcode=1
fi

# Linting
npm run lint --silent || exitcode=1

exit $exitcode
